plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
    id "com.github.breadmoirai.github-release" version "2.4.1"
    id "com.modrinth.minotaur" version "2.+"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

archivesBaseName = "${mod_name}-fabric-${minecraft_version}"

repositories {
    maven { url 'https://jitpack.io' }
    maven {
        url = "https://api.modrinth.com/maven"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modApi("com.github.Virtuoel:Pehkui:${pehkui_version}", {
        exclude group: "net.fabricmc.fabric-api"
    })
    modImplementation include("maven.modrinth:midnightlib:${project.midnightlib_version}-fabric")
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    filesMatching('*.mixins.json') {
        expand "refmap_target": "${archivesBaseName}-"
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

githubRelease {
    if (System.getenv("GH_TOKEN") != null) {
        authorization = "Token ${System.getenv("GH_TOKEN")}"
    }
    owner = "UltrusBot"
    repo = "SizeShiftingPotions"
    targetCommitish = "1.19.3"
    tagName = "v${project.version}-fabric"
    releaseName = "Size Shifting Potions v${project.version}-Fabric"
    body = new File("$rootDir/CHANGELOG.md").getText('UTF-8')
    releaseAssets = [remapJar, sourcesJar, javadocJar]
}
modrinth {
    if (System.getenv("MODRINTH_TOKEN") != null) {
        token = System.getenv("MODRINTH_TOKEN")
    }
    projectId = "sizeshiftingpotions"
    versionType = "release"
    uploadFile = remapJar
    changelog = new File("$rootDir/CHANGELOG.md").getText('UTF-8')
    versionNumber ="v${project.version}"
    versionName = "Size Shifting Potions v${project.version} Fabric"
    gameVersions = ["1.19.3"]
    loaders = ["quilt", "fabric"]
    dependencies {
        embedded.project "midnightlib"
        required.project "pehkui"
    }
    syncBodyFrom = rootProject.file("README.md").text
}
curseforge {
    if (System.getenv("CF_API_KEY") != null) {
        apiKey = System.getenv("CF_API_KEY")

    }
    project {
        id = "447440"
        changelogType = "markdown"
        changelog = new File("$rootDir/CHANGELOG.md").getText('UTF-8')
        releaseType = "release"
        addGameVersion "1.19.3"
        addGameVersion "Fabric"
        addGameVersion "Quilt"
        mainArtifact(remapJar) {
            displayName = "Size Shifting Potions v${project.version} Fabric"

        }
        relations {
            embeddedLibrary "midnightlib"
            requiredDependency "pehkui"
        }
    }
}

task releaseUpdate() {
    dependsOn githubRelease
    dependsOn modrinth
    dependsOn curseforge
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
